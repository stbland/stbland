/*
 * (c) Copyright 2005-2012 JAXIO, www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-mvc-3-sd:src/main/java/web/controller/controller.e.vm.java
 */
package fr.cora.mesindicateurssi.web.controller;

import static org.springframework.web.bind.annotation.RequestMethod.GET;
import static org.springframework.web.bind.annotation.RequestMethod.POST;
import static org.springframework.web.bind.annotation.RequestMethod.PUT;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;

import fr.cora.mesindicateurssi.domain.Book;
import fr.cora.mesindicateurssi.repository.BookRepository;

@Controller
@RequestMapping("/domain/book/")
public class BookController {

    @Autowired
    private BookRepository bookRepository;

    /**
     * Performs the list action.
     */
    @RequestMapping( { "", "list" })
    public String list(@ModelAttribute BookSearchForm bookSearchForm, Model model) {
        Page<Book> page = bookRepository.find(bookSearchForm);
        model.addAttribute("booksCount", page.getTotalElements());
        model.addAttribute("books", page.getContent());
        return "domain/book/list";
    }

    /**
     * Serves the create form.
     */
    @RequestMapping(value = "create", method = GET)
    public String create(@ModelAttribute Book book) {
        return "domain/book/create";
    }

    /**
     * Performs the create action and redirect to the show view.
     */
    @RequestMapping(value = "create", method = { POST, PUT })
    public String create(@Valid @ModelAttribute Book book, BindingResult bindingResult) {
        if (bindingResult.hasErrors()) {
            return create(book);
        }

        if (book.getAccount() != null) {
            // use the other side
            book.getAccount().addBook(book);
        }

        bookRepository.save(book);
        return "redirect:/domain/book/show/" + book.getId();
    }

    /**
     * Serves search by example form, search by pattern form and search by named query form.
     */
    @RequestMapping(value = "*", method = GET)
    public void catchAll(@ModelAttribute BookSearchForm bookSearchForm) {
    }

}